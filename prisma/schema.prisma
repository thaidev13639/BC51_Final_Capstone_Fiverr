generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model comments {
  id           Int       @id @default(autoincrement())
  code_job     Int?
  user_id      Int?
  date_comment DateTime? @db.Date
  content      String?   @db.VarChar(255)
  star_comment Int?
  jobs         jobs?     @relation(fields: [code_job], references: [code_job], onDelete: Cascade, onUpdate: NoAction, map: "comments_ibfk_1")
  users        users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comments_ibfk_2")

  @@index([code_job], map: "code_job")
  @@index([user_id], map: "user_id")
}

model group_type_jobs {
  id             Int        @default(autoincrement())
  name_group_job String     @db.VarChar(255)
  image          String     @db.VarChar(255)
  code_group_job Int        @unique(map: "code_group_job")
  group_job_id   Int?
  user_id        Int?
  type_jobs      type_jobs? @relation(fields: [group_job_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "group_type_jobs_ibfk_1")
  users          users?     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "group_type_jobs_ibfk_2")
  jobs           jobs[]

  @@id([id, code_group_job])
  @@index([group_job_id], map: "group_job_id")
  @@index([code_group_job], map: "idx_code_group_job")
  @@index([user_id], map: "user_id")
}

model jobs {
  id               Int              @default(autoincrement())
  name_job         String           @db.VarChar(255)
  rating           Int
  price            Int
  image            String           @db.VarChar(255)
  decription       String           @db.VarChar(255)
  short_decription String           @db.VarChar(255)
  star_job         Int
  code_job         Int              @unique(map: "code_job")
  user_id          Int?
  code_group_job   Int?
  comments         comments[]
  users            users?           @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "jobs_ibfk_1")
  group_type_jobs  group_type_jobs? @relation(fields: [code_group_job], references: [code_group_job], onDelete: Cascade, onUpdate: NoAction, map: "jobs_ibfk_2")
  rent_job         rent_job[]

  @@id([id, code_job])
  @@index([code_group_job], map: "code_group_job")
  @@index([code_job], map: "idx_code_job")
  @@index([user_id], map: "user_id")
}

model rent_job {
  id        Int       @id @default(autoincrement())
  code_job  Int?
  user_id   Int?
  date_rent DateTime? @db.Date
  complete  Boolean?
  jobs      jobs?     @relation(fields: [code_job], references: [code_job], onDelete: Cascade, onUpdate: NoAction, map: "rent_job_ibfk_1")
  users     users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "rent_job_ibfk_2")

  @@index([code_job], map: "code_job")
  @@index([user_id], map: "user_id")
}

model type_jobs {
  id              Int               @id @default(autoincrement())
  name_type       String            @db.VarChar(255)
  user_id         Int?
  group_type_jobs group_type_jobs[]
  users           users?            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "type_jobs_ibfk_1")

  @@index([user_id], map: "user_id")
}

model users {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(100)
  email           String            @db.VarChar(255)
  pass_word       String            @db.VarChar(255)
  phone           String            @db.VarChar(255)
  birth_day       String            @db.VarChar(255)
  gender          String            @db.VarChar(255)
  role            String            @db.VarChar(100)
  skill           String?           @db.VarChar(255)
  certification   String?           @db.VarChar(255)
  comments        comments[]
  group_type_jobs group_type_jobs[]
  jobs            jobs[]
  rent_job        rent_job[]
  type_jobs       type_jobs[]
}
